<%- include('../partials/admin/header') %>

<style>
    .order-detail-container {
        padding: 30px;
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }
    
    .order-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        padding-bottom: 15px;
        border-bottom: 1px solid #eee;
    }
    
    .order-title {
        font-size: 1.8rem;
        color: #2c3e50;
    }
    
    .order-status {
        padding: 0.25rem 0.75rem;
        border-radius: 9999px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }
    
    .status-pending { background: #fff3cd; color: #856404; } /* Yellow */
    .status-processing { background: #cce5ff; color: #004085; } /* Light Blue */
    .status-shipped { background: #d4edda; color: #155724; } /* Light Green */
    .status-out-for-delivery { background: #d1ecf1; color: #0c5460; } /* Cyan */
    .status-delivered { background: #28a745; color: #fff; } /* Green */
    .status-cancelled { background: #dc3545; color: #fff; } /* Red */
    .status-cancel-request { background: #f8d7da; color: #721c24; } /* Light Red */
    .status-return-request { background: #fff3cd; color: #856404; } /* Yellow */
    .status-returned { background: #6c757d; color: #fff; } /* Gray */
    
    .order-section {
        margin-bottom: 30px;
    }
    
    .section-title {
        font-size: 1.2rem;
        color: #2c3e50;
        margin-bottom: 15px;
        padding-bottom: 8px;
        border-bottom: 1px solid #eee;
    }
    
    .customer-info, .shipping-info {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }
    
    .info-group {
        flex: 1;
        min-width: 250px;
    }
    
    .info-label {
        font-size: 0.8rem;
        color: #6c757d;
        margin-bottom: 5px;
    }
    
    .info-value {
        font-weight: 500;
    }
    
    .items-table {
        width: 100%;
        border-collapse: collapse;
    }
    
    .items-table th {
        background: #f8f9fa;
        padding: 12px;
        text-align: left;
        font-weight: 600;
        color: #2c3e50;
    }
    
    .items-table td {
        padding: 12px;
        border-bottom: 1px solid #eee;
        vertical-align: top;
    }
    
    .item-image {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 4px;
    }
    
    .item-name {
        font-weight: 500;
    }
    
    .item-price {
        color: #28a745;
        font-weight: 500;
    }
    
    .summary-row {
        display: flex;
        justify-content: space-between;
        padding: 8px 0;
        border-bottom: 1px solid #eee;
    }
    
    .summary-label {
        color: #6c757d;
    }
    
    .summary-value {
        font-weight: 500;
    }
    
    .total-row {
        font-weight: 600;
        font-size: 1.1rem;
        color: #2c3e50;
    }
    
    .action-buttons {
        display: flex;
        gap: 10px;
        margin-top: 30px;
        flex-wrap: wrap;
    }
    
    .update-status {
        padding: 0.375rem 2.25rem 0.375rem 0.75rem;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
        background-position: right 0.75rem center;
        background-size: 16px 12px;
        border: 1px solid #e2e8f0;
        border-radius: 6px;
        font-size: 0.8125rem;
        transition: all 0.2s;
    }
    
    .update-status:focus {
        border-color: #4299e1;
        box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.2);
        outline: none;
    }
    
    .update-status:disabled {
        opacity: 0.5;
        cursor: not-allowed;
        background-color: #f8f9fa;
    }
    
    .timeline-container {
        margin-top: 20px;
    }
    
    .timeline-item {
        position: relative;
        padding-left: 30px;
        margin-bottom: 20px;
    }
    
    .timeline-item:before {
        content: '';
        position: absolute;
        left: 6px;
        top: 0;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background: #3498db;
    }
    
    .timeline-item:after {
        content: '';
        position: absolute;
        left: 11px;
        top: 12px;
        width: 2px;
        height: 100%;
        background: #e0e0e0;
    }
    
    .timeline-item:last-child:after {
        display: none;
    }
    
    .timeline-date {
        font-size: 0.8rem;
        color: #6c757d;
    }
    
    .timeline-content {
        font-size: 0.9rem;
    }
    
    .reason-text {
        padding: 10px;
        background: #f8f9fa;
        border-radius: 4px;
        margin-top: 5px;
        font-size: 0.9rem;
    }
    
    .order-actions .btn {
        padding: 0.375rem 0.75rem;
        font-size: 0.8125rem;
        border-radius: 6px;
        display: inline-flex;
        align-items: center;
        gap: 0.375rem;
    }
    
    .order-actions .btn i {
        font-size: 0.75rem;
    }
</style>

<div class="order-detail-container">
    <div class="order-header">
        <h1 class="order-title">Order #<%= order.orderId %></h1>
        <span class="order-status status-<%= order.status.toLowerCase().replace(/\s+/g, '-') %>">
            <%= order.status %>
        </span>
    </div>
    
    <div class="order-section">
        <h3 class="section-title">Customer Information</h3>
        <div class="customer-info">
            <div class="info-group">
                <div class="info-label">Name</div>
                <div class="info-value"><%= order.userId ? order.userId.name : 'Guest' %></div>
            </div>
            
            <div class="info-group">
                <div class="info-label">Email</div>
                <div class="info-value"><%= order.userId ? order.userId.email : 'N/A' %></div>
            </div>
            
            <div class="info-group">
                <div class="info-label">Phone</div>
                <div class="info-value"><%= order.userId ? order.userId.phone : 'N/A' %></div>
            </div>
        </div>
    </div>
    
    <div class="order-section">
        <h3 class="section-title">Shipping Information</h3>
        <div class="shipping-info">
            <div class="info-group">
                <div class="info-label">Name</div>
                <div class="info-value"><%= order.address.name %></div>
            </div>
            
            <div class="info-group">
                <div class="info-label">Address</div>
                <div class="info-value">
                    <%= order.address.landmark %>, <%= order.address.city %><br>
                    <%= order.address.state %> - <%= order.address.pinCode %>
                </div>
            </div>
            
            <div class="info-group">
                <div class="info-label">Contact</div>
                <div class="info-value">
                    <%= order.address.phone %>
                    <% if (order.address.altPhone) { %>
                        <br><%= order.address.altPhone %>
                    <% } %>
                </div>
            </div>
        </div>
    </div>
    
    <div class="order-section">
        <h3 class="section-title">Order Items</h3>
        <table class="items-table">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                </tr>
            </thead>
            <tbody>
                <% order.orderedItems.forEach(item => { %>
                    <tr>
                        <td>
                            <div style="display: flex; align-items: center; gap: 15px;">
                                <img src="<%= item.product.productImage && item.product.productImage.length ? '/Uploads/product-images/' + item.product.productImage[0] : '/images/placeholder-product.png' %>" 
                                     alt="<%= item.product.productName %>" class="item-image">
                                <span class="item-name"><%= item.product.productName %></span>
                            </div>
                        </td>
                        <td class="item-price">₹<%= item.price.toFixed(2) %></td>
                        <td><%= item.quantity %></td>
                        <td class="item-price">₹<%= (item.price * item.quantity).toFixed(2) %></td>
                    </tr>
                <% }) %>
            </tbody>
        </table>
    </div>
    
    <div class="order-section">
        <h3 class="section-title">Order Summary</h3>
        <div style="max-width: 400px; margin-left: auto;">
            <div class="summary-row">
                <span class="summary-label">Subtotal</span>
                <span class="summary-value">₹<%= order.totalPrice.toFixed(2) %></span>
            </div>
            
            <div class="summary-row">
                <span class="summary-label">Discount</span>
                <span class="summary-value">-₹<%= order.discount.toFixed(2) %></span>
            </div>
            
            <div class="summary-row">
                <span class="summary-label">Tax</span>
                <span class="summary-value">₹<%= order.taxes.toFixed(2) %></span>
            </div>
            
            <div class="summary-row">
                <span class="summary-label">Shipping</span>
                <span class="summary-value">₹<%= order.shippingCost.toFixed(2) %></span>
            </div>
            
            <div class="summary-row total-row">
                <span>Total</span>
                <span>₹<%= order.finalAmount.toFixed(2) %></span>
            </div>
        </div>
    </div>
    
    <% if (order.cancellationReason || order.returnReason) { %>
        <div class="order-section">
            <h3 class="section-title">
                <%= order.cancellationReason ? 'Cancellation Reason' : 'Return Reason' %>
            </h3>
            <div class="reason-text">
                <%= order.cancellationReason || order.returnReason %>
            </div>
        </div>
    <% } %>
    
    <div class="order-section">
        <h3 class="section-title">Order Status Timeline</h3>
        <div class="timeline-container" id="statusTimeline">
            <!-- Timeline will be loaded via AJAX -->
            <div class="text-center py-3">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        </div>
    </div>
    
    <div class="order-section">
        <h3 class="section-title">Order Actions</h3>
        <div class="action-buttons order-actions">
            <select class="form-select update-status w-auto d-inline-block" 
                    id="statusSelect" 
                    data-order-id="<%= order.orderId %>"
                    data-original-status="<%= order.status %>">
                <% const statuses = ['Pending', 'Processing', 'Shipped', 'Out for Delivery', 'Delivered', 'Cancelled', 'Cancel Request', 'Return Request', 'Returned']; %>
                <% statuses.forEach(status => { %>
                    <option value="<%= status %>" <%= order.status === status ? 'selected' : '' %>>
                        <%= status %>
                    </option>
                <% }) %>
            </select>
            
            <a href="/admin/orders/invoice/<%= order.orderId %>" class="btn btn-outline-secondary">
                <i class="fas fa-file-invoice"></i> Download Invoice
            </a>
    
            <% if (order.status === 'Cancel Request') { %>
                <button class="btn btn-success" id="approveCancelBtn" data-order-id="<%= order.orderId %>">
                    <i class="fas fa-check-circle"></i> Approve Cancel
                </button>
                <button class="btn btn-danger" id="rejectCancelBtn" data-order-id="<%= order.orderId %>">
                    <i class="fas fa-times-circle"></i> Reject Cancel
                </button>
            <% } %>
            
            <% if (order.status === 'Return Request') { %>
                <button class="btn btn-success" id="approveReturnBtn" data-order-id="<%= order.orderId %>">
                    <i class="fas fa-check-circle"></i> Approve Return
                </button>
                <button class="btn btn-danger" id="rejectReturnBtn" data-order-id="<%= order.orderId %>">
                    <i class="fas fa-times-circle"></i> Reject Return
                </button>
            <% } %>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    $(document).ready(function() {
        // Load status timeline
        function loadStatusTimeline() {
            const orderId = '<%= order.orderId %>';
            $.get(`/admin/orders/timeline/${orderId}`, function(data) {
                if (data.success) {
                    let timelineHtml = '';
                    if (data.timeline.length > 0) {
                        data.timeline.forEach(item => {
                            timelineHtml += `
                                <div class="timeline-item">
                                    <div class="timeline-date">
                                        ${new Date(item.date).toLocaleString()}
                                    </div>
                                    <div class="timeline-content">
                                        <strong>${item.status}</strong><br>
                                        ${item.description}
                                    </div>
                                </div>
                            `;
                        });
                    } else {
                        timelineHtml = '<p>No status history available</p>';
                    }
                    $('#statusTimeline').html(timelineHtml);
                } else {
                    $('#statusTimeline').html('<p>Failed to load timeline</p>');
                }
            }).fail(function() {
                $('#statusTimeline').html('<p>Error loading timeline</p>');
            });
        }
        
        loadStatusTimeline();
        
        // Function to update dropdown state based on order status
        function updateDropdownState(dropdown, status) {
            const terminalStatuses = ['Cancelled', 'Returned', 'Delivered'];
            
            if (terminalStatuses.includes(status)) {
                dropdown.prop('disabled', true);
            } else {
                dropdown.prop('disabled', false);
            }
        }

        // Initialize dropdown state on page load
        const $statusSelect = $('#statusSelect');
        const orderStatus = '<%= order.status %>';
        updateDropdownState($statusSelect, orderStatus);

        // Handle status updates
        $statusSelect.change(function() {
            const orderId = $(this).data('order-id');
            const newStatus = $(this).val();
            const originalStatus = $(this).data('original-status');

            Swal.fire({
                title: 'Update Order Status',
                text: `Are you sure you want to change the status to ${newStatus}?`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Update',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `/admin/orders/update-status/${orderId}`,
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ status: newStatus }),
                        success: function(response) {
                            Swal.fire('Success', response.message, 'success').then(() => {
                                // Update the original status data attribute
                                $statusSelect.data('original-status', newStatus);
                                // Update dropdown state
                                updateDropdownState($statusSelect, newStatus);
                                // Update the displayed status badge
                                const statusBadge = $('.order-status');
                                statusBadge.text(newStatus);
                                statusBadge.removeClass(function(index, className) {
                                    return (className.match(/(^|\s)status-\S+/g) || []).join(' ');
                                });
                                statusBadge.addClass(`status-${newStatus.toLowerCase().replace(/\s+/g, '-')}`);
                            });
                        },
                        error: function(xhr) {
                            Swal.fire('Error', xhr.responseJSON?.message || 'Failed to update status', 'error');
                            $statusSelect.val(originalStatus); // Reset on error
                        }
                    });
                } else {
                    $statusSelect.val(originalStatus); // Reset on cancel
                }
            });
        });

        // Cancel request handling
        $('#approveCancelBtn').click(function() {
            const orderId = $(this).data('order-id');
            Swal.fire({
                title: 'Approve Cancel Request',
                text: 'Are you sure you want to approve this cancellation?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Approve',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `/admin/orders/cancel/${orderId}`,
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ action: 'approve' }),
                        success: function(response) {
                            Swal.fire('Success', response.message, 'success').then(() => {
                                location.reload();
                            });
                        },
                        error: function(xhr) {
                            Swal.fire('Error', xhr.responseJSON?.message || 'Failed to process cancel', 'error');
                        }
                    });
                }
            });
        });

        $('#rejectCancelBtn').click(function() {
            const orderId = $(this).data('order-id');
            Swal.fire({
                title: 'Reject Cancel Request',
                text: 'Are you sure you want to reject this cancellation request?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Reject',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `/admin/orders/cancel/${orderId}`,
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ action: 'reject' }),
                        success: function(response) {
                            Swal.fire('Success', response.message, 'success').then(() => location.reload());
                        },
                        error: function(xhr) {
                            Swal.fire('Error', xhr.responseJSON?.message || 'Failed to process cancel', 'error');
                        }
                    });
                }
            });
        });
        
        // Return request handling
        $('#approveReturnBtn').click(function() {
            const orderId = $(this).data('order-id');
            Swal.fire({
                title: 'Approve Return Request',
                text: 'Are you sure you want to approve this return and refund the amount?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Approve',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `/admin/orders/${orderId}/return`,
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ action: 'approve' }),
                        success: function(response) {
                            Swal.fire('Success', response.message, 'success').then(() => {
                                location.reload();
                            });
                        },
                        error: function(xhr) {
                            Swal.fire('Error', xhr.responseJSON?.message || 'Failed to process return', 'error');
                        }
                    });
                }
            });
        });

        $('#rejectReturnBtn').click(function() {
            const orderId = $(this).data('order-id');
            Swal.fire({
                title: 'Reject Return Request',
                text: 'Are you sure you want to reject this return request?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Reject',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `/admin/orders/${orderId}/return`,
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ action: 'reject' }),
                        success: function(response) {
                            Swal.fire('Success', response.message, 'success').then(() => {
                                location.reload();
                            });
                        },
                        error: function(xhr) {
                            Swal.fire('Error', xhr.responseJSON?.message || 'Failed to process return', 'error');
                        }
                    });
                }
            });
        });
    });
</script>

<%- include('../partials/admin/footer') %>