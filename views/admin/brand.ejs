<%- include("../../views/partials/admin/header") %>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<style>
    .brand-image {
    width: 50px; 
    height: 50px; 
    object-fit: cover; 
    border-radius: 8px; 
    margin-bottom: 5px;
}

</style>
<div class="container">
    <div class="card">
        <h2 class="card-title">Add New Brand</h2>
        <form id="addBrandForm" action="/admin/brands/add" method="POST" enctype="multipart/form-data">
            <div class="form-group">
                <label for="brandName">Brand Name:</label>
                <input type="text" id="brandName" name="brandName" class="form-control" required>
                <small id="brandNameError" class="text-danger" style="display: none;">Please enter a Brand Name</small>
            </div>
            <div class="form-group">
                <label for="brandImage">Brand Logo:</label>
                <input type="file" id="brandImage" name="brandImage" class="form-control">
            </div>
            <button type="button" onclick="submitBrandForm()" class="btn btn-primary">Add Brand</button>
        </form>
    </div>

    <div class="card">
        <h2 class="card-title">Existing Brands</h2>
        <table class="brand-table">
            <thead>
                <tr>
                    <th>Brand</th>
                    <th>Logo</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% brands.forEach(brand => { %>
                    <tr>
                        <td><%= brand.brandName %></td>
                        <td>
                            <% if (brand.brandImage && brand.brandImage.length > 0) { %>
                                <img src="<%= brand.brandImage[0] %>" alt="<%= brand.brandName %>" class="brand-image img-fluid">
                            <% } %>
                        </td>
                        <td>
                            <span class="<%= brand.isBlocked ? 'status-blocked' : 'status-active' %>">
                                <%= brand.isBlocked ? 'Blocked' : 'Active' %>
                            </span>
                        </td>
                        <td class="action-buttons">
                            <button onclick="toggleBrand('<%= brand._id %>', <%= brand.isBlocked %>)" class="btn <%= brand.isBlocked ? 'btn-success' : 'btn-danger' %>">
                                <%= brand.isBlocked ? 'Unblock' : 'Block' %>
                            </button>
                            <button onclick="deleteBrand('<%= brand._id %>')" class="btn btn-danger">Delete</button>
                        </td>
                    </tr>
                <% }) %>
            </tbody>
        </table>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    function submitBrandForm() {
        // Reset error message
        const brandNameInput = document.getElementById('brandName');
        const brandNameError = document.getElementById('brandNameError');
        brandNameError.style.display = 'none';
        brandNameInput.classList.remove('is-invalid');

        // Validate brand name
        if (!brandNameInput.value.trim()) {
            brandNameInput.classList.add('is-invalid');
            brandNameError.style.display = 'block';
            return;
        }

        Swal.fire({
            title: "Add New Brand",
            text: "Are you sure you want to add this brand?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, Add Brand"
        }).then((result) => {
            if (result.isConfirmed) {
                const form = document.getElementById('addBrandForm');
                const formData = new FormData(form);
                
                fetch('/admin/brands/add', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: "Success!",
                            text: data.message,
                            icon: "success"
                        }).then(() => location.reload());
                    } else {
                        Swal.fire({
                            title: "Error!",
                            text: data.message,
                            icon: "error"
                        });
                    }
                })
                .catch(error => {
                    Swal.fire({
                        title: "Error!",
                        text: "An unexpected error occurred",
                        icon: "error"
                    });
                });
            }
        });
    }

    function toggleBrand(brandId, isBlocked) {
        Swal.fire({
            title: isBlocked ? "Unblock Brand?" : "Block Brand?",
            text: "Are you sure you want to " + (isBlocked ? "unblock" : "block") + " this brand?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, " + (isBlocked ? "Unblock" : "Block")
        }).then((result) => {
            if (result.isConfirmed) {
                fetch('/admin/brands/toggle', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ brandId })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: "Success!",
                            text: data.message,
                            icon: "success"
                        }).then(() => location.reload());
                    } else {
                        Swal.fire({
                            title: "Error!",
                            text: data.message,
                            icon: "error"
                        });
                    }
                });
            }
        });
    }

    function deleteBrand(brandId) {
        Swal.fire({
            title: "Delete Brand?",
            text: "This action cannot be undone!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "Yes, Delete"
        }).then((result) => {
            if (result.isConfirmed) {
                fetch('/admin/brands/delete', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ brandId })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: "Success!",
                            text: data.message,
                            icon: "success"
                        }).then(() => location.reload());
                    } else {
                        Swal.fire({
                            title: "Error!",
                            text: data.message,
                            icon: "error"
                        });
                    }
                });
            }
        });
    }
</script>

<%- include("../../views/partials/admin/footer") %>
