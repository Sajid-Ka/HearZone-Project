<%- include('../partials/user/header') %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
    /* Main Container */
    .order-details-container {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        min-height: 100vh;
        padding: 40px 15px;
    }

    /* Order Card */
    .order-card {
        background: white;
        border-radius: 15px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        padding: 30px;
        max-width: 900px;
        margin: 0 auto;
    }

    .order-header {
        color: #2c3e50;
        font-weight: 700;
        margin-bottom: 25px;
        position: relative;
    }

    .order-header::after {
        content: '';
        position: absolute;
        bottom: -5px;
        left: 0;
        width: 50px;
        height: 3px;
        background: #3498db;
        border-radius: 2px;
    }

    /* Back Button */
    .btn-back {
        background: #636e72;
        border: none;
        padding: 10px 20px;
        border-radius: 20px;
        color: white;
        font-weight: 500;
        transition: all 0.3s ease;
        margin-bottom: 20px;
        display: inline-flex;
        align-items: center;
    }

    .btn-back:hover {
        background: #2c3e50;
        transform: translateX(-3px);
        box-shadow: 0 4px 10px rgba(99,110,114,0.3);
        color: white;
        text-decoration: none;
    }

    .btn-back i {
        margin-right: 8px;
    }

    /* Order Info */
    .order-info p {
        color: #636e72;
        margin-bottom: 15px;
        font-size: 1rem;
    }

    .order-info p strong {
        color: #2c3e50;
        font-weight: 600;
        min-width: 100px;
        display: inline-block;
    }

    /* Items Section */
    .items-section {
        margin: 20px 0;
    }

    .items-section h4 {
        color: #2c3e50;
        font-weight: 600;
        margin-bottom: 20px;
    }

    .item-row {
        display: flex;
        align-items: center;
        padding: 15px 0;
        border-bottom: 1px solid #eee;
    }

    .item-row img {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 8px;
        margin-right: 15px;
    }

    .item-row span {
        flex: 1;
        color: #636e72;
        font-size: 0.95rem;
    }

    .item-row span:last-child {
        font-weight: 600;
        color: #2c3e50;
    }

    /* Pricing Section */
    .pricing-section hr {
        margin: 25px 0;
        border-color: #eee;
    }

    .pricing-section p {
        display: flex;
        justify-content: space-between;
        margin: 12px 0;
        color: #636e72;
    }

    .pricing-section p strong {
        color: #2c3e50;
        font-size: 1.2rem;
    }

    /* Buttons */
    .action-buttons {
        margin-top: 25px;
        display: flex;
        gap: 15px;
        flex-wrap: wrap;
    }

    .btn-danger {
        background: #e74c3c;
        border: none;
        padding: 10px 25px;
        border-radius: 20px;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .btn-danger:hover {
        background: #c0392b;
        transform: translateY(-2px);
        box-shadow: 0 4px 10px rgba(231,76,60,0.3);
    }

    .btn-warning {
        background: #f1c40f;
        border: none;
        padding: 10px 25px;
        border-radius: 20px;
        font-weight: 600;
        color: #2c3e50;
        transition: all 0.3s ease;
    }

    .btn-warning:hover {
        background: #e1b307;
        transform: translateY(-2px);
        box-shadow: 0 4px 10px rgba(241,196,15,0.3);
        color: #2c3e50;
    }

    .btn-primary {
        background: #3498db;
        border: none;
        padding: 10px 25px;
        border-radius: 20px;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .btn-primary:hover {
        background: #2980b9;
        transform: translateY(-2px);
        box-shadow: 0 4px 10px rgba(52,152,219,0.3);
    }

    .item-row a img {
        transition: transform 0.3s ease, opacity 0.3s ease;
    }

    .item-row a:hover img {
        transform: scale(1.05);
        opacity: 0.9;
        cursor: pointer;
    }


    .status-pending { background: #fff3cd; color: #856404; } /* Yellow */
    .status-processing { background: #cce5ff; color: #004085; } /* Light Blue */
    .status-shipped { background: #d4edda; color: #155724; } /* Light Green */
    .status-out-for-delivery { background: #d1ecf1; color: #0c5460; } /* Cyan */
    .status-delivered { background: #28a745; color: #fff; } /* Green */
    .status-cancelled { background: #dc3545; color: #fff; } /* Red */
    .status-cancel-request { background: #f8d7da; color: #721c24; } /* Light Red */
    .status-return-request { background: #fff3cd; color: #856404; } /* Yellow */
    .status-returned { background: #6c757d; color: #fff; } /* Gray */


    /* Responsive Design */
    @media (max-width: 768px) {
        .order-card {
            padding: 20px;
            margin: 15px;
        }
        .item-row {
            flex-direction: column;
            align-items: flex-start;
            gap: 10px;
        }
        .item-row img {
            margin-bottom: 10px;
        }
        .action-buttons {
            flex-direction: column;
            gap: 10px;
        }
        .btn-back, .btn-danger, .btn-warning, .btn-primary {
            width: 100%;
        }
    }
</style>

<br>
<br>
<br>
<br>
<br>
<br>

<div class="order-details-container">
    <div class="order-card">
        <a href="/orders" class="btn-back">
            <i class="fas fa-arrow-left"></i> Back to Orders
        </a>
        <h2 class="order-header">Order Details - #<%= order.orderId %></h2>
        <div class="order-info">
            <p><strong>Status:</strong> <span class="status-<%= order.status.toLowerCase().replace(/\s+/g, '-') %>"><%= order.status %></span></p>
            <p><strong>Date:</strong> <%= order.createdAt ? new Date(order.createdAt).toLocaleDateString() : 'N/A' %></p>
            <p><strong>Address:</strong> <%= order.address.name %>, <%= order.address.city %>, <%= order.address.landmark %> - <%= order.address.pinCode %></p>
        </div>
        <div class="items-section">
            <h4>Items</h4>
            <% order.orderedItems.forEach(item => { %>
                <div class="item-row">
                    <a href="/product-details?id=<%= item.product._id %>">
                        <img src="<%= item.product && item.product.productImage && item.product.productImage.length ? '/uploads/product-images/' + item.product.productImage[0] : '/uploads/product-images/placeholder.jpg' %>" 
                             alt="<%= item.product ? item.product.productName : 'Product' %>">
                    </a>
                    <span><%= item.product.productName %></span>
                    <span>Qty: <%= item.quantity %></span>
                    <span>₹<%= (item.price * item.quantity).toFixed(2) %></span>
                </div>
            <% }) %>
        </div>
        <div class="pricing-section">
            <hr>
            <p>Subtotal: <span>₹<%= order.totalPrice.toFixed(2) %></span></p>
            <p>Discount: <span>-₹<%= order.discount.toFixed(2) %></span></p>
            <p>Taxes: <span>₹<%= order.taxes.toFixed(2) %></span></p>
            <p>Shipping: <span>₹<%= order.shippingCost.toFixed(2) %></span></p>
            <p><strong>Total:</strong> <strong>₹<%= order.finalAmount.toFixed(2) %></strong></p>
        </div>
        <div class="action-buttons">
            <% if (!['Cancelled', 'Delivered', 'Cancel Request', 'Returned', 'Return Request'].includes(order.status)) { %>
                <button class="btn btn-danger" id="cancelOrderBtn">Cancel Order</button>
            <% } %>
            <% if (order.status === 'Delivered') { %>
                <button class="btn btn-warning" id="returnOrderBtn">Return Order</button>
            <% } %>
            <% if (order.status === 'Return Request') { %>
                <button class="btn btn-danger" id="cancelReturnRequestBtn">Cancel Return Request</button>
            <% } %>
            <a href="/orders/<%= order.orderId %>/invoice" class="btn btn-primary">Download Invoice</a>
        </div>
    </div>
</div>

<br>
<br>
<br>

<script>
    document.getElementById('cancelOrderBtn')?.addEventListener('click', async () => {
        const reason = await Swal.fire({
            title: 'Cancel Order',
            input: 'text',
            inputLabel: 'Reason for cancellation (optional)',
            showCancelButton: true
        });
        if (reason.isConfirmed) {
            const response = await fetch(`/orders/<%= order.orderId %>/cancel`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ reason: reason.value })
            });
            const data = await response.json();
            if (data.success) {
                Swal.fire('Success', data.message, 'success').then(() => location.reload());
            } else {
                Swal.fire('Error', data.message, 'error');
            }
        }
    });

    document.getElementById('returnOrderBtn')?.addEventListener('click', async () => {
        const reason = await Swal.fire({
            title: 'Return Order',
            input: 'text',
            inputLabel: 'Reason for return (required)',
            inputValidator: (value) => !value && 'Reason is required!'
        });
        if (reason.isConfirmed) {
            const response = await fetch(`/orders/<%= order.orderId %>/return`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ reason: reason.value })
            });
            const data = await response.json();
            if (data.success) {
                Swal.fire('Success', data.message, 'success').then(() => location.reload());
            } else {
                Swal.fire('Error', data.message, 'error');
            }
        }
    });

    document.getElementById('cancelReturnRequestBtn')?.addEventListener('click', async () => {
        const result = await Swal.fire({
            title: 'Cancel Return Request',
            text: 'Are you sure you want to cancel your return request? This will revert the order status to Delivered.',
            icon: 'question',
            showCancelButton: true,
            confirmButtonText: 'Yes, cancel it',
            cancelButtonText: 'No'
        });
        if (result.isConfirmed) {
            const response = await fetch(`/orders/<%= order.orderId %>/cancel-return-request`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({})
            });
            const data = await response.json();
            if (data.success) {
                Swal.fire('Success', data.message, 'success').then(() => location.reload());
            } else {
                Swal.fire('Error', data.message, 'error');
            }
        }
    });
</script>
<%- include('../partials/user/footer') %>