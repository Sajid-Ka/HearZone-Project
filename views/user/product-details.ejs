<%- include("../../views/partials/user/header") %>
<style>
    .breadcrumb-section {
        border-bottom: 1px solid #eee;
    }
    
    .breadcrumb {
        font-size: 14px;
    }
    
    .breadcrumb-item a {
        color: #666;
        text-decoration: none;
    }
    
    .breadcrumb-item a:hover {
        color: #0d6efd;
    }
    
    .breadcrumb-item.active {
        color: #333;
    }

    /* Product Gallery Styles */
    .product-gallery {
        display: flex;
        flex-direction: column;
        gap: 24px;
        max-width: 650px;
        margin: 0 auto;
        padding: 20px;
        background: #ffffff;
        border-radius: 15px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
    }

    .main-image {
        width: 100%;
        height: 450px;
        border-radius: 12px;
        overflow: hidden;
        position: relative;
        background: #f8f9fa;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 1px solid #eee;
        cursor: zoom-in;
    }

    .main-image img {
        width: 100%;
        height: 100%;
        object-fit: contain;
        transition: transform 0.4s ease-in-out;
    }

    .main-image:hover img {
        transform: scale(1.05);
    }

    .thumbnail-container {
        display: flex;
        gap: 15px;
        justify-content: center;
        padding: 10px 0;
    }

    .thumbnail {
        width: 85px;
        height: 85px;
        border-radius: 10px;
        cursor: pointer;
        overflow: hidden;
        border: 2px solid #e9ecef;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        background: #ffffff;
    }

    .thumbnail:hover {
        border-color: #0d6efd;
        transform: translateY(-3px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .thumbnail.active {
        border-color: #0d6efd;
        box-shadow: 0 0 0 2px #0d6efd30;
    }

    .thumbnail img {
        width: 100%;
        height: 100%;
        object-fit: contain;
        padding: 6px;
    }

    /* Product Info Styles */
    .product-info {
        padding: 30px;
        background: #ffffff;
        border-radius: 15px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
    }

    .product-info h2 {
        font-size: 28px;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 20px;
    }

    .price-tag {
        font-size: 32px;
        color: #0d6efd;
        margin: 20px 0;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .original-price {
        text-decoration: line-through;
        color: #6c757d;
        font-size: 24px;
    }

    .offer-badge {
        background: linear-gradient(45deg, #ff4757, #ff6b81);
        color: white;
        padding: 6px 12px;
        border-radius: 25px;
        font-size: 16px;
        font-weight: 500;
        box-shadow: 0 4px 15px rgba(255, 71, 87, 0.2);
    }

    .detail-qty {
        display: flex;
        align-items: center;
        background-color: #f5f5f5;
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 5px 10px;
        width: 120px;
        justify-content: space-between;
    }

    .qty-down, .qty-up {
        color: #333;
        text-decoration: none;
        font-size: 18px;
        cursor: pointer;
    }

    .qty-val {
        font-size: 16px;
        color: #333;
        padding: 0 10px;
    }

    .button-add-to-cart {
        background-color: #333;
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 5px;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .button-add-to-cart:hover {
        background-color: #222;
        transform: translateY(-2px);
    }

    .product-meta {
        margin-top: 30px;
        padding-top: 20px;
        border-top: 1px solid #dee2e6;
    }

    .detail-extralink {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    /* Add zoom functionality styles */
    .main-image {
        cursor: zoom-in;
        position: relative;
        overflow: hidden;
    }

    .main-image img {
        transition: transform 0.3s ease;
    }

    .zoomed {
        position: absolute;
        pointer-events: none;
        width: 100%;
        height: 100%;
        object-fit: contain;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .zoomed.active {
        opacity: 1;
    }

    /* Fullscreen viewer styles */
    .fullscreen-container {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.9);
        z-index: 9999;
        cursor: zoom-out;
    }

    .fullscreen-image {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        max-width: 90%;
        max-height: 90vh;
        object-fit: contain;
    }

    .close-fullscreen {
        position: absolute;
        top: 20px;
        right: 20px;
        color: white;
        font-size: 30px;
        cursor: pointer;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 50%;
        transition: all 0.3s ease;
    }

    .close-fullscreen:hover {
        background: rgba(255, 255, 255, 0.3);
        transform: scale(1.1);
    }

    /* Add this to your existing styles */
    .review-section {
        padding: 2rem;
        background: white;
        border-radius: 15px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
    }

    .star-rating {
        display: inline-flex;
        flex-direction: row-reverse;
        gap: 0.25rem;
    }

    .star-rating input {
        display: none;
    }

    .star-rating label {
        cursor: pointer;
        font-size: 1.5rem;
        color: #ddd;
    }

    .star-rating label:hover,
    .star-rating label:hover ~ label,
    .star-rating input:checked ~ label {
        color: #ffd700;
    }

    .rating-stats {
        display: flex;
        gap: 2rem;
        margin-bottom: 2rem;
    }

    .average-rating {
        text-align: center;
    }

    .rating-number {
        font-size: 2rem;
        font-weight: bold;
    }

    .rating-bar {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 0.5rem;
    }

    .progress {
        flex: 1;
        height: 0.5rem;
        background: #eee;
        border-radius: 0.25rem;
        overflow: hidden;
    }

    .progress-bar {
        height: 100%;
        background: #ffd700;
    }

    .review-item {
        border-bottom: 1px solid #eee;
        padding: 1rem 0;
    }

    .review-header {
        display: flex;
        justify-content: space-between;
        color: #666;
        font-size: 0.9rem;
    }

    .rating {
        color: #ffd700;
        margin: 0.5rem 0;
    }

    /* Add these new styles */
    .btn-review-submit {
        transition: opacity 0.3s ease;
    }
    
    .btn-review-submit:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }
</style>

<!-- Add this before closing </head> -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<br>
<br>
<br>
<br>
<br>
<br>

<div class="breadcrumb-section bg-white">
    <div class="container">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0 py-3">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <% if (category) { %>
                    <li class="breadcrumb-item"><a href="/shop">Shop</a></li>
                <% } %>
                <li class="breadcrumb-item active" aria-current="page"><%= product.productName %></li>
            </ol>
        </nav>
    </div>
</div>

<div class="container mt-5">
    <div class="row">
        <div class="col-md-6">
            <div class="product-gallery">
                <div class="main-image" id="imageContainer">
                    <img id="mainImage" src="/uploads/re-image/<%= product.productImage[0] %>" alt="<%= product.productName %>">
                    <img id="zoomedImage" class="zoomed" src="/uploads/re-image/<%= product.productImage[0] %>" alt="<%= product.productName %>">
                </div>
                <div class="thumbnail-container">
                    <% for(let i = 0; i < Math.min(4, product.productImage.length); i++) { %>
                        <div class="thumbnail <%= i === 0 ? 'active' : '' %>" onclick="changeImage('<%= i %>')">
                            <img src="/uploads/re-image/<%= product.productImage[i] %>" alt="thumbnail">
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="product-info">
                <h2><%= product.productName %></h2>
                <div class="price-tag">
                    ₹<%= product.salePrice.toLocaleString('en-IN') %>
                    <span class="original-price">₹<%= product.regularPrice.toLocaleString('en-IN') %></span>
                    <% if(totalOffer > 0) { %>
                        <span class="offer-badge"><%= totalOffer %>% OFF</span>
                    <% } %>
                </div>
                <div class="product-detail-rating">
                    <div class="pro-details-brand">
                        <span> Brand: <a href="#"><%= product.brand || 'Unknown' %></a></span>
                    </div>
                    <div class="product-rate-cover text-end">
                        <div class="product-rate d-inline-block">
                            <div class="product-rating" style="width: 90%"></div>
                        </div>
                        <span class="font-small ml-5 text-muted"> (25 reviews)</span>
                    </div>
                </div>
                <div class="clearfix product-price-cover">
                    <div class="product-price primary-color float-left">
                        <span class="save-price font-md color3 ml-15">
                            <% if (!totalOffer) { %>
                                No Offers
                            <% } else { %>
                                <%= totalOffer %>% Offer
                            <% } %>
                        </span>
                    </div>
                </div>
                <div class="bt-1 border-color-1 mt-15 mb-15"></div>
                <div class="short-desc mb-30">
                    <p><%= product.description || 'No description available' %></p>
                </div>
                <div class="product_sort_info font-xs mb-30">
                    <ul>
                        <li class="mb-10"><i class="fi-rs-crown mr-5"></i> 1 Year Brand Warranty</li>
                        <li class="mb-10"><i class="fi-rs-refresh mr-5"></i> 30 Day Return Policy</li>
                        <li><i class="fi-rs-credit-card mr-5"></i> Cash on Delivery available</li>
                    </ul>
                </div>
                <div class="bt-1 border-color-1 mt-30 mb-30"></div>
                <div class="detail-extralink">
                    <div class="detail-qty">
                        <a href="#" class="qty-down" onclick="updateQuantity(-1); return false;">-</a>
                        <span class="qty-val" id="quantity">1</span>
                        <a href="#" class="qty-up" onclick="updateQuantity(1); return false;">+</a>
                    </div>
                    <div class="product-extra-link2">
                        <button type="submit" class="button button-add-to-cart" onclick="addToCart('<%= product._id %>')">Add to cart</button>
                        <a aria-label="Add To Wishlist" class="action-btn hover-up" href="/wishlist/add?productId=<%= product._id %>"><i class="fi-rs-heart"></i></a>
                    </div>
                </div>
                <ul class="product-meta font-xs color-grey mt-50">
                    <li class="mb-5">Stock Code: <a href="#">FWM15VKT</a></li>
                    <li class="mb-5">Category: <a href="#" rel="tag"><%= category ? category.name : '' %></a></li>
                    <li>Availability: <span class="in-stock text-success ml-5"><%= quantity %> items in Stock</span></li>
                </ul>
            </div>
        </div>
    </div>
</div>

<!-- Add this after the product info section -->
<div class="review-section mt-5">
    <h3>Customer Reviews</h3>
    <div class="review-summary mb-4">
        <div class="rating-stats">
            <div class="average-rating">
                <span class="rating-number">0.0</span>
                <div class="stars"></div>
                <span class="total-reviews">(0 reviews)</span>
            </div>
            <div class="rating-bars"></div>
        </div>
    </div>

    <% if (user) { %>
        <div class="review-form mb-4">
            <h4>Write a Review</h4>
            <form id="reviewForm">
                <div class="rating-input mb-3">
                    <label>Rating:</label>
                    <div class="star-rating">
                        <input type="radio" name="rating" value="5" id="star5">
                        <label for="star5">★</label>
                        <input type="radio" name="rating" value="4" id="star4">
                        <label for="star4">★</label>
                        <input type="radio" name="rating" value="3" id="star3">
                        <label for="star3">★</label>
                        <input type="radio" name="rating" value="2" id="star2">
                        <label for="star2">★</label>
                        <input type="radio" name="rating" value="1" id="star1">
                        <label for="star1">★</label>
                    </div>
                </div>
                <div class="form-group mb-3">
                    <label for="comment">Your Review:</label>
                    <textarea class="form-control" id="comment" name="comment" rows="3" required></textarea>
                </div>
                <button type="submit" class="btn btn-primary btn-review-submit" id="submitReview" disabled>Submit Review</button>
            </form>
        </div>
    <% } else { %>
        <div class="login-prompt mb-4">
            <p>Please <a href="/login">login</a> to write a review.</p>
        </div>
    <% } %>

    <div class="reviews-list">
        <!-- Reviews will be loaded here dynamically -->
    </div>
</div>

<div id="fullscreenContainer" class="fullscreen-container">
    <span class="close-fullscreen" onclick="closeFullscreen()">×</span>
    <img id="fullscreenImage" class="fullscreen-image" src="" alt="Fullscreen view">
</div>

<br>
<br>
<br>

<script>
    function updateQuantity(change) {
        const qtyElement = document.getElementById('quantity');
        let currentQty = parseInt(qtyElement.textContent);
        let newQty = currentQty + change;
        const maxQty = <%= quantity %>;
        if (newQty >= 1 && newQty <= maxQty) {
            qtyElement.textContent = newQty;
        }
    }

    function addToCart(productId) {
        const quantity = document.getElementById('quantity').textContent;
        console.log(`Adding ${quantity} of product ${productId} to cart`);
    }

    function changeImage(index) {
        const images = <%- JSON.stringify(product.productImage) %>;
        const mainImage = document.getElementById('mainImage');
        const zoomedImage = document.getElementById('zoomedImage');
        const thumbnails = document.querySelectorAll('.thumbnail');
        
        const imagePath = `/uploads/re-image/${images[index]}`;
        mainImage.src = imagePath;
        zoomedImage.src = imagePath;
        fullscreenImage.src = imagePath;
        
        thumbnails.forEach(thumb => thumb.classList.remove('active'));
        thumbnails[index].classList.add('active');
    }

    // Zoom functionality
    const imageContainer = document.getElementById('imageContainer');
    const mainImage = document.getElementById('mainImage');
    const zoomedImage = document.getElementById('zoomedImage');

    imageContainer.addEventListener('mousemove', (e) => {
        const rect = imageContainer.getBoundingClientRect();
        const x = e.clientX - rect.left;
        const y = e.clientY - rect.top;
        
        const xPercent = (x / rect.width) * 100;
        const yPercent = (y / rect.height) * 100;
        
        zoomedImage.style.transform = 'scale(2)';
        zoomedImage.style.transformOrigin = `${xPercent}% ${yPercent}%`;
        zoomedImage.classList.add('active');
    });

    imageContainer.addEventListener('mouseleave', () => {
        zoomedImage.classList.remove('active');
    });

    // Fullscreen functionality
    const fullscreenContainer = document.getElementById('fullscreenContainer');
    const fullscreenImage = document.getElementById('fullscreenImage');

    imageContainer.addEventListener('click', () => {
        fullscreenContainer.style.display = 'block';
        fullscreenImage.src = mainImage.src;
        document.body.style.overflow = 'hidden';
    });

    function closeFullscreen() {
        fullscreenContainer.style.display = 'none';
        document.body.style.overflow = 'auto';
    }

    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
            closeFullscreen();
        }
    });

    fullscreenContainer.addEventListener('click', (e) => {
        if (e.target === fullscreenContainer) {
            closeFullscreen();
        }
    });

    // Reviews functionality
    document.addEventListener('DOMContentLoaded', function() {
        loadReviews();

        const reviewForm = document.getElementById('reviewForm');
        if (reviewForm) {
            reviewForm.addEventListener('submit', function(e) {
                e.preventDefault();
                submitReview();
            });
        }

        // Add textarea event listener
        const commentTextarea = document.getElementById('comment');
        const submitButton = document.getElementById('submitReview');
        
        commentTextarea.addEventListener('input', function() {
            submitButton.disabled = this.value.trim().length === 0;
        });
    });

    async function loadReviews() {
        try {
            const response = await fetch(`/review/product/<%= product._id %>`);
            const data = await response.json();
            
            if (data.success) {
                updateReviewStats(data.stats);
                renderReviews(data.reviews);
            }
        } catch (error) {
            console.error('Error loading reviews:', error);
        }
    }

    function updateReviewStats(stats) {
        document.querySelector('.rating-number').textContent = stats.averageRating.toFixed(1);
        document.querySelector('.total-reviews').textContent = `(${stats.totalReviews} reviews)`;
        
        const barsHtml = Object.entries(stats.ratingDistribution)
            .reverse()
            .map(([rating, count]) => {
                const percentage = (count / stats.totalReviews * 100) || 0;
                return `
                    <div class="rating-bar">
                        <span class="rating-label">${rating} ★</span>
                        <div class="progress">
                            <div class="progress-bar" style="width: ${percentage}%"></div>
                        </div>
                        <span class="rating-count">${count}</span>
                    </div>
                `;
            }).join('');
        
        document.querySelector('.rating-bars').innerHTML = barsHtml;
    }

    function renderReviews(reviews) {
        const reviewsList = document.querySelector('.reviews-list');
        reviewsList.innerHTML = reviews.map(review => `
            <div class="review-item mb-3">
                <div class="review-header">
                    <span class="reviewer-name">${review.username}</span>
                    <span class="review-date">${new Date(review.createdAt).toLocaleDateString()}</span>
                </div>
                <div class="rating">
                    ${'★'.repeat(review.rating)}${'☆'.repeat(5-review.rating)}
                </div>
                <div class="review-comment">
                    ${review.comment}
                </div>
            </div>
        `).join('');
    }

    async function submitReview() {
        const rating = document.querySelector('input[name="rating"]:checked')?.value;
        const comment = document.querySelector('#comment').value;
        const submitButton = document.getElementById('submitReview');

        if (!rating || !comment) {
            Swal.fire({
                icon: 'warning',
                title: 'Missing Information',
                text: 'Please provide both rating and comment',
                confirmButtonColor: '#3085d6'
            });
            return;
        }

        try {
            const response = await fetch('/review/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    productId: '<%= product._id %>',
                    rating,
                    comment
                })
            });

            const data = await response.json();
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: 'Your review has been added successfully!',
                    confirmButtonColor: '#3085d6'
                }).then(() => {
                    document.getElementById('reviewForm').reset();
                    submitButton.disabled = true; // Disable button after reset
                    loadReviews();
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: data.message || 'Failed to add review',
                    confirmButtonColor: '#3085d6'
                });
            }
        } catch (error) {
            console.error('Error submitting review:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Failed to submit review. Please try again later.',
                confirmButtonColor: '#3085d6'
            });
        }
    }
</script>

<%- include("../../views/partials/user/footer") %>