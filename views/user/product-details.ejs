<%- include("../../views/partials/user/header") %>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" integrity="sha512-Fo3rlrZj/k7ujTnHg4CGR2D7kSs0v4LLanw2qksYuRlEzO+tcaEPQogQ0KaoGN26/zrn20ImR1DfuLWnOo7 <>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.min.css">


<style>
    body, html {
        margin: 0;
        padding: 0;
        width: 100%;
    }

    .footer-container {
        width: 130%;
        margin-left: -176px;
    }

    .breadcrumb-section {
        border-bottom: 1px solid #eee;
    }
    
    .breadcrumb {
        font-size: 14px;
    }
    
    .breadcrumb-item a {
        color: #666;
        text-decoration: none;
    }
    
    .breadcrumb-item a:hover {
        color: #0d6efd;
    }
    
    .breadcrumb-item.active {
        color: #333;
    }

    .product-gallery {
        display: flex;
        flex-direction: column;
        gap: 24px;
        max-width: 650px;
        margin: 0 auto;
        padding: 20px;
        background: #ffffff;
        border-radius: 15px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
    }

    .main-image {
        width: 100%;
        height: 450px;
        border-radius: 12px;
        overflow: hidden;
        position: relative;
        background: #f8f9fa;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 1px solid #eee;
        cursor: zoom-in;
    }

    .main-image img {
        width: 100%;
        height: 100%;
        object-fit: contain;
        transition: transform 0.4s ease-in-out;
    }

    .main-image:hover img {
        transform: scale(1.05);
    }

    .thumbnail-container {
        display: flex;
        gap: 15px;
        justify-content: center;
        padding: 10px 0;
    }

    .thumbnail {
        width: 85px;
        height: 85px;
        border-radius: 10px;
        cursor: pointer;
        overflow: hidden;
        border: 2px solid #e9ecef;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        background: #ffffff;
    }

    .thumbnail:hover {
        border-color: #0d6efd;
        transform: translateY(-3px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .thumbnail.active {
        border-color: #0d6efd;
        box-shadow: 0 0 0 2px #0d6efd30;
    }

    .thumbnail img {
        width: 100%;
        height: 100%;
        object-fit: contain;
        padding: 6px;
    }

    .product-info {
        padding: 30px;
        background: #ffffff;
        border-radius: 15px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
        font-family: 'Arial', sans-serif;
    }

    .product-brand {
        margin-bottom: 15px;
    }

    .brand-label {
        font-size: 14px;
        font-weight: 600;
        color: #666;
        text-transform: uppercase;
    }

    .brand-name {
        font-size: 16px;
        font-weight: 500;
        color: #2c3e50;
        margin-left: 5px;
    }

    .rating-section {
        margin-bottom: 15px;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    #productRating {
        display: flex;
        align-items: center;
    }

    .star-icon {
        color: #ffd700;
        font-size: 1.2rem;
    }

    .rating-value {
        background-color: #ffd700;
        color: #000000;
        font-size: 0.9rem;
        font-weight: 500;
        padding: 2px 8px;
        border-radius: 12px;
        line-height: 1;
    }

    .price-section {
        margin-bottom: 20px;
        padding: 15px;
        background: #f8f9fa;
        border-radius: 10px;
    }

    .price-tag {
        font-size: 28px;
        color: #0d6efd;
        display: flex;
        align-items: center;
        gap: 12px;
        margin-bottom: 8px;
    }

    .original-price {
        text-decoration: line-through;
        color: #6c757d;
        font-size: 20px;
    }

    .offer-badge {
        background: linear-gradient(45deg, #ff4757, #ff6b81);
        color: white;
        padding: 6px 12px;
        border-radius: 25px;
        font-size: 14px;
        font-weight: 500;
        box-shadow: 0 4px 15px rgba(255, 71, 87, 0.2);
    }

    .offer-text {
        font-size: 14px;
        color: #333;
        font-weight: 500;
    }

    .product-description {
        margin-bottom: 25px;
        padding: 15px;
        background: #f1f5f9;
        border-radius: 8px;
        border-left: 4px solid #0d6efd;
    }

    .product-description p {
        margin: 0;
        font-size: 15px;
        color: #4a5568;
        line-height: 1.6;
    }

    .product-features {
        margin-bottom: 25px;
    }

    .product-features ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .product-features li {
        display: flex;
        align-items: center;
        font-size: 14px;
        color: #4a5568;
        margin-bottom: 12px;
    }

    .product-features i {
        font-size: 16px;
        color: #0d6efd;
        margin-right: 8px;
    }

    .action-section {
        display: flex;
        align-items: center;
        gap: 15px;
        margin-bottom: 25px;
    }

    .detail-qty {
        display: flex;
        align-items: center;
        background-color: #f5f5f5;
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 5px 10px;
        width: 120px;
        justify-content: space-between;
    }

    .qty-down, .qty-up {
        color: #333;
        text-decoration: none;
        font-size: 18px;
        cursor: pointer;
    }

    .qty-val {
        font-size: 16px;
        color: #333;
        padding: 0 10px;
    }

    .button-add-to-cart {
        background-color: #333;
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 5px;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .button-add-to-cart:hover {
        background-color: #222;
        transform: translateY(-2px);
    }


    .button-buy-now {
        background-color: #19752f;
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 5px;
        font-weight: 500;
        transition: all 0.3s ease;
        margin-left: 10px;
    }

    .button-buy-now:hover {
        background-color: #218838;
        transform: translateY(-2px);
    }

    .button-wishlist {
        background-color: transparent;
        color: #dc3545;
        border: 1px solid #dc3545;
        padding: 12px 15px;
        border-radius: 5px;
        font-weight: 500;
        transition: all 0.3s ease;
        margin-left: 10px;
        cursor: pointer;
    }

    .button-wishlist:hover {
        background-color: #f8d7da;
    }

    .button-wishlist i {
        font-size: 16px;
    }

    .button-wishlist.active {
        background-color: #dc3545;
        color: white;
    }

    .out-of-stock-message {
        width: 100%;
        text-align: center;
        padding: 1rem;
        background-color: #fee2e2;
        color: #ef4444;
        border-radius: 0.5rem;
    }

    .out-of-stock-message p {
        margin: 0.5rem 0 0;
        font-size: 0.875rem;
    }

    .button-add-to-wishlist {
        background-color: #ff4757;
        color: white;
        border: none;
        padding: 12px 20px;
        border-radius: 5px;
        font-weight: 500;
        transition: all 0.3s ease;
        margin-left: 10px;
    }

    .button-add-to-wishlist:hover {
        background-color: #e63946;
        transform: translateY(-2px);
    }

    .button-add-to-wishlist i {
        margin-right: 5px;
    }

    .product-meta {
        padding-top: 20px;
        border-top: 1px solid #dee2e6;
    }

    .product-meta ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .product-meta li {
        font-size: 13px;
        color: #666;
        margin-bottom: 8px;
    }

    .product-meta a {
        color: #0d6efd;
        text-decoration: none;
    }

    .product-meta a:hover {
        text-decoration: underline;
    }

    .product-meta .in-stock {
        color: #28a745;
    }

    .product-meta .in-stock.low-stock {
        color: #dc3545 !important;
        font-weight: 600;
    }

    .product-meta .in-stock.text-success {
        color: #28a745;
    }

    .detail-extralink {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .main-image11 {
        cursor: zoom-in;
        position: relative;
        overflow: hidden;
    }

    .main-image img {
        transition: transform 0.3s ease;
    }

    .zoomed {
        position: absolute;
        pointer-events: none;
        width: 100%;
        height: 100%;
        object-fit: contain;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .zoomed.active {
        opacity: 1;
    }

    .highlights-container {
        display: flex;
        flex-wrap: wrap;
        gap: 1.5rem;
        padding: 1rem 0;
    }

    .highlight-item {
        display: flex;
        align-items: center;
        background: #f8f9fa;
        border-radius: 10px;
        padding: 1rem;
        transition: all 0.3s ease;
        border-left: 4px solid #0d6efd;
        flex: 1 1 calc(50% - 1rem);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .highlight-item:hover {
        transform: translateY(-3px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        background: #e9ecef;
    }

    .highlight-icon {
        font-size: 1.5rem;
        margin-right: 1rem;
        color: #0d6efd;
    }

    .highlight-text {
        font-size: 1rem;
        color: #4a5568;
        line-height: 1.5;
    }

    .specs-container {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        padding: 1rem 0;
    }

    .spec-item {
        display: flex;
        align-items: center;
        background: #ffffff;
        border-radius: 10px;
        padding: 1rem;
        border: 1px solid #e9ecef;
        transition: all 0.3s ease;
    }

    .spec-item:hover {
        background: #f8f9fa;
        border-color: #0d6efd;
        transform: translateX(5px);
    }

    .spec-icon {
        font-size: 1.5rem;
        margin-right: 1rem;
        color: #2c3e50;
    }

    .spec-text {
        font-size: 1rem;
        color: #4a5568;
        line-height: 1.5;
    }

    @media (max-width: 768px) {
        .highlight-item {
            flex: 1 1 100%;
        }
    }

    .details-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 1.5rem;
        padding-bottom: 0.5rem;
        border-bottom: 2px solid #0d6efd;
        position: relative;
    }

    .details-title::after {
        content: '';
        position: absolute;
        bottom: -2px;
        left: 0;
        width: 50px;
        height: 2px;
        background: #0d6efd;
    }

    .fullscreen-container {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.9);
        z-index: 9999;
        cursor: zoom-out;
    }

    .fullscreen-image {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        max-width: 90%;
        max-height: 90vh;
        object-fit: contain;
    }

    .close-fullscreen {
        position: absolute;
        top: 20px;
        right: 20px;
        color: white;
        font-size: 30px;
        cursor: pointer;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 50%;
        transition: all 0.3s ease;
    }

    .close-fullscreen:hover {
        background: rgba(255, 255, 255, 0.3);
        transform: scale(1.1);
    }

    .review-section {
        padding: 2.5rem;
        background: white;
        border-radius: 16px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
        margin-bottom: 2.5rem;
        transition: transform 0.3s ease;
    }

    .review-section:hover {
        transform: translateY(-5px);
    }

    .review-section h3 {
        font-size: 1.5rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 1.5rem;
        padding-bottom: 0.8rem;
        border-bottom: 2px solid #f0f7ff;
        position: relative;
    }

    .review-section h3::after {
        content: '';
        position: absolute;
        bottom: -2px;
        left: 0;
        width: 60px;
        height: 2px;
        background: #0d6efd;
    }

    .rating-stats {
        display: flex;
        gap: 3rem;
        margin-bottom: 2rem;
        background: #f8f9fa;
        padding: 1.5rem;
        border-radius: 12px;
    }

    .average-rating {
        text-align: center;
    }

    .rating-number {
        font-size: 2.5rem;
        font-weight: bold;
        color: #2c3e50;
    }

    .total-reviews {
        color: #6c757d;
        font-size: 0.9rem;
    }

    .rating-bar {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 0.8rem;
    }

    .rating-label {
        width: 40px;
        text-align: right;
        font-weight: 500;
    }

    .progress {
        flex: 1;
        height: 0.6rem;
        background: #eee;
        border-radius: 0.3rem;
        overflow: hidden;
    }

    .progress-bar {
        height: 100%;
        background: #ffd700;
    }

    .rating-count {
        width: 30px;
        text-align: right;
        color: #6c757d;
    }

    .review-form {
        background: #f8f9fa;
        padding: 1.5rem;
        border-radius: 12px;
        margin-bottom: 2rem;
    }

    .review-form h4 {
        font-size: 1.2rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 1.2rem;
    }

    .star-rating {
        display: inline-flex;
        flex-direction: row-reverse;
        gap: 0.3rem;
    }

    .star-rating input {
        display: none;
    }

    .star-rating label {
        cursor: pointer;
        font-size: 1.8rem;
        color: #ddd;
        transition: color 0.2s ease;
    }

    .star-rating label:hover,
    .star-rating label:hover ~ label,
    .star-rating input:checked ~ label {
        color: #ffd700;
    }

    .btn-review-submit {
        background: linear-gradient(45deg, #0d6efd, #0b5ed7);
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(13, 110, 253, 0.2);
    }

    .btn-review-submit:not(:disabled):hover {
        background: linear-gradient(45deg, #0b5ed7, #0a58ca);
        transform: translateY(-3px);
        box-shadow: 0 6px 20px rgba(13, 110, 253, 0.3);
    }

    .btn-review-submit:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }

    .review-item {
        border-bottom: 1px solid #eee;
        padding: 1.2rem 0;
        transition: transform 0.2s ease;
    }

    .review-item:hover {
        transform: translateX(5px);
    }

    .review-header {
        display: flex;
        justify-content: space-between;
        color: #666;
        font-size: 0.9rem;
    }

    .reviewer-name {
        font-weight: 500;
        color: #2c3e50;
    }

    .review-date {
        color: #6c757d;
    }

    .rating {
        color: #ffd700;
        margin: 0.8rem 0;
        font-size: 1.2rem;
    }

    .<review-comment {
        color: #4a5568;
        line-height: 1.6;
    }

    .product-details-box {
        background: white;
        border-radius: 15px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
        margin: 2rem 0;
        padding: 2rem;
    }

    .details-section {
        margin-bottom: 2rem;
    }

    .details-section:last-child {
        margin-bottom: 0;
    }

    .details-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 1.5rem;
        padding-bottom: 0.5rem;
        border-bottom: 2px solid #f8f9fa;
    }

    .highlights-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .highlights-list li {
        display: flex;
        align-items: flex-start;
        margin-bottom: 1rem;
        padding-left: 1.5rem;
        position: relative;
    }

    .highlights-list li:before {
        content: "•";
        color: #0d6efd;
        font-size: 1.5rem;
        position: absolute;
        left: 0;
        top: -0.25rem;
    }

    .specs-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
    }

    .specs-table tr:nth-child(even) {
        background-color: #f8f9fa;
    }

    .specs-table th, .specs-table td {
        padding: 1rem;
        border: none;
    }

    .specs-table th {
        width: 30%;
        color: #2c3e50;
        font-weight: 600;
    }

    .specs-table td {
        color: #4a5568;
    }

    .nav-buttons-container {
        position: sticky;
        top: 130px;
        z-index: 1000;
        display: flex;
        justify-content: center;
        gap: 1rem;
        padding: 10px 20px;
        border-radius: 50px;
        transition: opacity 0.3s ease;
        opacity: 0%;
        margin: 0 auto;
        max-width: 600px;
        margin-top: 20px;
    }

    .nav-buttons-container.visible {
        opacity: 1;
    }

    .nav-button {
        padding: 10px 20px;
        border: none;
        border-radius: 20px;
        background: #f8f9fa;
        color: #2c3e50;
        font-weight: 600;
        font-size: 13px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        cursor: pointer;
        transition: all 0.3s ease;
        white-space: nowrap;
    }

    .nav-button:hover {
        background: #0d6efd;
        color: #ffffff;
        transform: translateY(-2px);
    }

    .nav-button.active {
        background: #0d6efd;
        color: #ffffff;
    }

    body {
        padding-top: 0;
    }

    .container {
        position: relative;
    }

    .related-products-section {
        margin: 2rem 0;
        padding: 2rem;
        background: white;
        border-radius: 15px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
    }

    .related-products-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 1.5rem;
    }

    .related-product-card {
        transition: all 0.3s ease;
        border-radius: 10px;
        overflow: hidden;
        background: white;
        height: 100%;
        border: 1px solid #eee;
    }

    .related-product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    }

    .related-product-image {
        width: 100%;
        height: 200px;
        object-fit: contain;
        padding: 1rem;
    }

    .related-product-info {
        padding: 1rem;
    }

    .related-product-name {
        font-size: 1.1rem;
        color: #2c3e50;
        margin-bottom: 0.5rem;
        height: 3rem;
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
    }

    .related-product-price {
        font-size: 1.25rem;
        color: #0d6efd;
        font-weight: 600;
    }

    .related-product-original {
        color: #6c757d;
        text-decoration: line-through;
        font-size: 0.9rem;
        margin-left: 0.5rem;
    }

    .related-discount-badge {
        background: #ff4757;
        color: white;
        padding: 0.25rem 0.5rem;
        border-radius: 15px;
        font-size: 0.8rem;
        margin-left: 0.5rem;
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>

<br>
<br>
<br>
<br>
<br>
<br>


<%- include('../../views/partials/user/breadcrumb', {
    breadcrumbs: [
        { text: category ? category.name : 'Category', url: category ? `/filter?category=${category._id}` : '/shop' },
        { text: product.productName, url: '#', active: true }
    ]
}) %>

<div class="container mt-5">
    <div class="row">
        <div class="col-md-6">
            <div class="product-gallery">
                <div class="main-image" id="imageContainer">
                    <img id="mainImage" src="/Uploads/re-image/<%= product.productImage[0] %>" alt="<%= product.productName %>">
                    <img id="zoomedImage" class="zoomed" src="/Uploads/re-image/<%= product.productImage[0] %>" alt="<%= product.productName %>">
                </div>
                <div class="thumbnail-container">
                    <% for(let i = 0; i < Math.min(4, product.productImage.length); i++) { %>
                        <div class="thumbnail <%= i === 0 ? 'active' : '' %>" onclick="changeImage('<%= i %>')">
                            <img src="/Uploads/re-image/<%= product.productImage[i] %>" alt="thumbnail">
                        </div>
                    <% } %>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="product-info">
                <div class="price-section">
                    <div class="rating-section">
                        <div class="rating" id="productRating">
                            <span class="star-icon">★</span>
                            <span class="rating-value" id="ratingValue">0.0</span>
                        </div>
                    </div>
                    <h2 style="margin-top: 10px; color: #2c3e50; font-size: 1.8rem; font-weight: 600;">
                        <%= product.productName %>
                    </h2>
                    
                    <div class="price-tag">
                    <% if (totalOffer > 0) { %>
                        ₹<%= Math.round(product.salePrice).toLocaleString('en-IN') %>
                        <span class="original-price">₹<%= product.regularPrice.toLocaleString('en-IN') %></span>
                    <% } else { %>
                        ₹<%= product.regularPrice.toLocaleString('en-IN') %>
                    <% } %>
                    <% if (totalOffer > 0) { %>
                        <span class="offer-badge"><%= totalOffer %>%</span>
                    <% } %>
                    </div>
                    <div class="offer-text">
                        <% if (!totalOffer) { %>
                            <span>No Offers</span>
                        <% } else { %>
                            <span><%= totalOffer %>% Offer</span>
                        <% } %>
                    </div>
                </div>

                <div class="product-description">
                    <p><%= product.description || 'No description available' %></p>
                </div>

                <div class="product-brand">
                    <span class="brand-label">Brand:</span>
                    <span class="brand-name"><%= product.brand.brandName || 'Unknown' %></span>
                </div>

                <div class="product-features">
                    <ul>
                        <li><i class="fi-rs-crown"></i> 1 Year Brand Warranty</li>
                        <li><i class="fi-rs-refresh"></i> 30 Day Return Policy</li>
                        <li><i class="fi-rs-credit-card"></i> Cash on Delivery available</li>
                    </ul>
                </div>

                <div class="action-section">
                    <% if (quantity > 0) { %>
                        <div class="detail-qty">
                            <a href="#" class="qty-down" onclick="updateQuantity(-1); return false;">-</a>
                            <span class="qty-val" id="quantity">1</span>
                            <a href="#" class="qty-up" onclick="updateQuantity(1); return false;">+</a>
                        </div>
                        <button type="submit" class="button button-add-to-cart" onclick="addToCart('<%= product._id %>')">
                            Add to cart
                        </button>
                        <button type="button" class="button button-buy-now" onclick="buyNow('<%= product._id %>')">
                            Buy Now
                        </button>
                        <button type="button" class="button-wishlist" id="wishlistButton" onclick="toggleWishlist('<%= product._id %>')">
                            <i class="<%= isInWishlist ? 'fas' : 'far' %> fa-heart"></i>
                        </button>
                    <% } else { %>
                        <div class="out-of-stock-message">
                            <strong>Out of Stock</strong>
                            <p>This product is currently unavailable</p>
                        </div>
                    <% } %>
                </div>

                <div class="product-meta">
                    <ul>
                        <li>Stock Code: <a href="#">FWM15VKT</a></li>
                        <li>Category: <a href="#" rel="tag"><%= category ? category.name : '' %></a></li>
                        <li>Availability: <span class="in-stock <%= quantity <= 5 ? 'low-stock' : '' %> text-success"><%= quantity %> items in Stock</span></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="nav-buttons-container" id="navButtons">
    <button class="nav-button" onclick="scrollToSection('product-details-box')">Spec</button>
    <button class="nav-button" onclick="scrollToSection('related-products-section')">Related Products</button>
    <button class="nav-button" onclick="scrollToSection('review-section')">Reviews</button>
</div>

<div class="container">
    <div class="product-details-box" id="product-details-box">
        <div class="row">
            <div class="col-12 details-section">
                <h3 class="details-title">Specifications</h3>
                <div class="specs-container">
                    <% if (product.specifications && product.specifications.length > 0) { %>
                        <% product.specifications.forEach(spec => { %>
                            <div class="spec-item">
                                <span class="spec-icon"></span>
                                <span class="spec-text"><%= spec %></span>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="spec-item">
                            <span class="spec-icon"></span>
                            <span class="spec-text">No specifications available</span>
                        </div>
                    <% } %>
                </div>
            </div>

            <div class="col-12 details-section">
                <h3 class="details-title">Highlights</h3>
                <div class="highlights-container">
                    <% if (product.highlights && product.highlights.length > 0) { %>
                        <% product.highlights.forEach(highlight => { %>
                            <div class="highlight-item">
                                <span class="highlight-icon">✨</span>
                                <span class="highlight-text"><%= highlight %></span>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="highlight-item">
                            <span class="highlight-icon">✨</span>
                            <span class="highlight-text">No highlights available</span>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="related-products-section" id="related-products-section">
        <div class="container">
            <div class="related-products-section">
                <h3 class="related-products-title">Related Products</h3>
                <% if (relatedProducts && relatedProducts.length > 0) { %>
                    <div class="row g-4">
                        <% relatedProducts.forEach(prod => { %>
                        <div class="col-md-4">
                            <a href="/product-details?id=<%= prod._id %>" class="text-decoration-none">
                                <div class="related-product-card">
                                    <img src="/uploads/re-image/<%= prod.productImage[0] %>" 
                                        alt="<%= prod.productName %>" 
                                        class="related-product-image">
                                    <div class="related-product-info">
                                        <h4 class="related-product-name"><%= prod.productName %></h4>
                                        <div class="d-flex align-items-center">
                                            <span class="related-product-price">
                                                ₹<%= prod.displayPrice %>
                                            </span>
                                            <% if (prod.hasDiscount) { %>
                                                <span class="related-product-original">
                                                    ₹<%= prod.regularPrice.toLocaleString('en-IN') %>
                                                </span>
                                                <span class="related-discount-badge">
                                                    <%= prod.discountBadge %>
                                                </span>
                                            <% } %>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </div>
                        <% }); %>
                    </div>
                <% } else { %>
                    <p>No related products found.</p>
                <% } %>
            </div>
        </div>
    </div>
</div>

<div class="review-section mt-5" id="review-section">
    <div class="review-section mt-5">
        <h3>Customer Reviews</h3>
        <div class="review-summary mb-4">
            <div class="rating-stats">
                <div class="average-rating">
                    <span class="rating-number">0.0</span>
                    <div class="stars"></div>
                    <span class="total-reviews">(0 reviews)</span>
                </div>
                <div class="rating-bars"></div>
            </div>
        </div>

        <% if (user) { %>
            <div class="review-form mb-4">
                <h4>Write a Review</h4>
                <form id="reviewForm">
                    <div class="rating-input mb-3">
                        <label>Rating:</label>
                        <div class="star-rating">
                            <input type="radio" name="rating" value="5" id="star5">
                            <label for="star5">★</label>
                            <input type="radio" name="rating" value="4" id="star4">
                            <label for="star4">★</label>
                            <input type="radio" name="rating" value="3" id="star3">
                            <label for="star3">★</label>
                            <input type="radio" name="rating" value="2" id="star2">
                            <label for="star2">★</label>
                            <input type="radio" name="rating" value="1" id="star1">
                            <label for="star1">★</label>
                        </div>
                    </div>
                    <div class="form-group mb-3">
                        <label for="comment">Your Review:</label>
                        <textarea class="form-control" id="comment" name="comment" rows="3" required></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary btn-review-submit" id="submitReview" disabled>Submit Review</button>
                </form>
            </div>
        <% } else { %>
            <div class="login-prompt mb-4">
                <p>Please <a href="/login">login</a> to write a review.</p>
            </div>
        <% } %>

        <div class="reviews-list">
            
        </div>
    </div>
</div>
<div id="fullscreenContainer" class="fullscreen-container">
    <span class="close-fullscreen" onclick="closeFullscreen()">×</span>
    <img id="fullscreenImage" class="fullscreen-image" src="" alt="Fullscreen view">
</div>

<script>
    function updateQuantity(change) {
        const qtyElement = document.getElementById('quantity');
        let currentQty = parseInt(qtyElement.textContent);
        let newQty = currentQty + change;
        const maxQty = <%= quantity %>;
        
        if (maxQty === 0) {
            alert('Sorry, this product is currently out of stock.');
            return;
        }
        
        if (newQty >= 1 && newQty <= maxQty) {
            qtyElement.textContent = newQty;
        }
    }

    function addToCart(productId) {
        <% if (!user) { %>
            showLoginSignupPrompt();
            return;
        <% } %>

        const quantity = parseInt(document.getElementById('quantity').textContent);
        
        $.ajax({
            url: '/cart/add',
            method: 'POST',
            data: {
                productId: productId,
                quantity: quantity
            },
            success: function(response) {
                if (response.success) {
                    let message = response.message;
                    
                    if (response.removedFromWishlist) {
                        message = 'Product added to cart and removed from wishlist!';
                        updateWishlistCount(response.wishlistCount);
                    }

                    Swal.fire({
                        icon: 'success',
                        title: 'Cart Updated',
                        text: message,
                        confirmButtonColor: '#4f46e5',
                        timer: 2000,
                        timerProgressBar: true
                    });
                    
                    updateCartCount(response.cartCount);
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: response.message,
                        confirmButtonColor: '#dc3545'
                    });
                }
            },
            error: function(xhr) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: xhr.responseJSON?.message || 'Failed to add to cart',
                    confirmButtonColor: '#dc3545'
                });
            }
        });
    }


    async function buyNow(productId) {
        <% if (!user) { %>
            showLoginSignupPrompt('checkout');
            return;
        <% } %>

        const quantity = parseInt(document.getElementById('quantity').textContent);
        const maxQty = <%= quantity %>;

        if (quantity < 1 || quantity > maxQty) {
            Swal.fire({
                icon: 'error',
                title: 'Invalid Quantity',
                text: 'Please select a valid quantity',
                confirmButtonColor: '#dc3545'
            });
            return;
        }

        try {
            const response = await fetch('/buy-now', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ productId, quantity })
            });

            const data = await response.json();

            if (response.ok && data.success) {
                window.location.href = '/checkout?buyNow=true';
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.message || 'Failed to initiate buy now',
                    confirmButtonColor: '#dc3545'
                });
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Something went wrong. Please try again.',
                confirmButtonColor: '#dc3545'
            });
        }
    }

    async function toggleWishlist(productId) {
        <% if (!user) { %>
            showLoginSignupPrompt('wishlist');
            return;
        <% } %>

        const wishlistButton = document.getElementById('wishlistButton');
        const isCurrentlyInWishlist = wishlistButton.querySelector('i').classList.contains('fas');
        
        try {
            if (isCurrentlyInWishlist) {
                
                const response = await fetch('/wishlist/remove', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ productId })
                });
                
                const data = await response.json();
                
                if (response.ok && data.success) {
                    wishlistButton.querySelector('i').classList.replace('fas', 'far');
                    Swal.fire({
                        icon: 'success',
                        title: 'Removed',
                        text: data.message,
                        timer: 1500,
                        showConfirmButton: false
                    });
                    updateWishlistCount(data.wishlistCount);
                } else {
                    throw new Error(data.message || 'Failed to remove from wishlist');
                }
            } else {
               
                const cartCheck = await fetch('/wishlist/check', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ productId })
                });
                
                const cartData = await cartCheck.json();
                
                if (cartData.isInCart) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Already in Cart',
                        text: 'This product is already in your cart and cannot be added to wishlist',
                        confirmButtonColor: '#dc3545'
                    });
                    return;
                }
                
                
                const response = await fetch('/wishlist/add', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ productId })
                });
                
                const data = await response.json();
                
                if (response.ok && data.success) {
                    wishlistButton.querySelector('i').classList.replace('far', 'fas');
                    Swal.fire({
                        icon: 'success',
                        title: 'Added',
                        text: data.message,
                        timer: 1500,
                        showConfirmButton: false
                    });
                    updateWishlistCount(data.wishlistCount);
                } else {
                    throw new Error(data.message || 'Failed to add to wishlist');
                }
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message,
                confirmButtonColor: '#dc3545'
            });
        }
    }


    function changeImage(index) {
        const images = <%- JSON.stringify(product.productImage) %>;
        const mainImage = document.getElementById('mainImage');
        const zoomedImage = document.getElementById('zoomedImage');
        const thumbnails = document.querySelectorAll('.thumbnail');
        
        const imagePath = `/Uploads/re-image/${images[index]}`;
        mainImage.src = imagePath;
        zoomedImage.src = imagePath;
        fullscreenImage.src = imagePath;
        
        thumbnails.forEach(thumb => thumb.classList.remove('active'));
        thumbnails[index].classList.add('active');
    }

    const imageContainer = document.getElementById('imageContainer');
    const mainImage = document.getElementById('mainImage');
    const zoomedImage = document.getElementById('zoomedImage');

    imageContainer.addEventListener('mousemove', (e) => {
        const rect = imageContainer.getBoundingClientRect();
        const x = e.clientX - rect.left;
        const y = e.clientY - rect.top;
        
        const xPercent = (x / rect.width) * 100;
        const yPercent = (y / rect.height) * 100;
        
        zoomedImage.style.transform = 'scale(2)';
        zoomedImage.style.transformOrigin = `${xPercent}% ${yPercent}%`;
        zoomedImage.classList.add('active');
    });

    imageContainer.addEventListener('mouseleave', () => {
        zoomedImage.classList.remove('active');
    });

    const fullscreenContainer = document.getElementById('fullscreenContainer');
    const fullscreenImage = document.getElementById('fullscreenImage');

    imageContainer.addEventListener('click', () => {
        fullscreenContainer.style.display = 'block';
        fullscreenImage.src = mainImage.src;
        document.body.style.overflow = 'hidden';
    });

    function closeFullscreen() {
        fullscreenContainer.style.display = 'none';
        document.body.style.overflow = 'auto';
    }

    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
            closeFullscreen();
        }
    });

    fullscreenContainer.addEventListener('click', (e) => {
        if (e.target === fullscreenContainer) {
            closeFullscreen();
        }
    });

    document.addEventListener('DOMContentLoaded', function() {
        loadReviews();

        const reviewForm = document.getElementById('reviewForm');
        if (reviewForm) {
            reviewForm.addEventListener('submit', function(e) {
                e.preventDefault();
                submitReview();
            });
        }

        const commentTextarea = document.getElementById('comment');
        const submitButton = document.getElementById('submitReview');
        
        if (commentTextarea && submitButton) {
            commentTextarea.addEventListener('input', function() {
                submitButton.disabled = this.value.trim().length === 0;
            });
        }

        const navButtons = document.getElementById('navButtons');
        const mainImage = document.querySelector('.main-image');

        function handleScroll() {
            const scrollPosition = window.scrollY;
            const mainImageBottom = mainImage.getBoundingClientRect().bottom + window.scrollY;
            const viewportHeight = window.innerHeight;

            if (scrollPosition > mainImageBottom - viewportHeight/2) {
                navButtons.classList.add('visible');
            } else {
                navButtons.classList.remove('visible');
            }
        }

        handleScroll();
        window.addEventListener('scroll', handleScroll);
    });

    async function loadReviews() {
        try {
            const response = await fetch(`/review/product/<%= product._id %>`);
            const data = await response.json();
            
            if (data.success) {
                updateReviewStats(data.stats);
                renderReviews(data.reviews);
                displayProductRating(data.stats);
            }
        } catch (error) {
            console.error('Error loading reviews:', error);
        }
    }

    function updateReviewStats(stats) {
        document.querySelector('.rating-number').textContent = stats.averageRating.toFixed(1);
        document.querySelector('.total-reviews').textContent = `(${stats.totalReviews} reviews)`;
        
        const barsHtml = Object.entries(stats.ratingDistribution)
            .reverse()
            .map(([rating, count]) => {
                const percentage = (count / stats.totalReviews * 100) || 0;
                return `
                    <div class="rating-bar">
                        <span class="rating-label">${rating} ★</span>
                        <div class="progress">
                            <div class="progress-bar" style="width: ${percentage}%"></div>
                        </div>
                        <span class="rating-count">${count}</span>
                    </div>
                `;
            }).join('');
        
        document.querySelector('.rating-bars').innerHTML = barsHtml;
    }

    function renderReviews(reviews) {
        const reviewsList = document.querySelector('.reviews-list');
        const userId = '<%= user ? user.id : "" %>';
        const initialReviews = reviews.slice(0, 5);
        const hasMoreReviews = reviews.length > 5;
        
        let html = initialReviews.map(review => `
            <div class="review-item mb-3">
                <div class="review-header">
                    <span class="reviewer-name">${review.username}</span>
                    <div>
                        <span class="review-date">${new Date(review.createdAt).toLocaleDateString()}</span>
                        ${userId && review.userId === userId ? `
                            <button class="btn btn-danger btn-sm ms-2" 
                                    onclick="confirmDelete('${review._id}')">
                                Delete
                            </button>
                        ` : ''}
                    </div>
                </div>
                <div class="rating">
                    ${'★'.repeat(review.rating)}${'☆'.repeat(5-review.rating)}
                </div>
                <div class="review-comment">
                    ${review.comment}
                </div>
            </div>
        `).join('');

        if (hasMoreReviews) {
            html += `
                <div class="text-center mt-4">
                    <a href="/review/full/<%= product._id %>" class="btn btn-primary">
                        Show All Reviews (${reviews.length})
                    </a>
                </div>
            `;
        }
        
        reviewsList.innerHTML = html;
    }

    async function submitReview() {
        const rating = document.querySelector('input[name="rating"]:checked')?.value;
        const comment = document.querySelector('#comment').value;
        const submitButton = document.getElementById('submitReview');

        if (!rating || !comment) {
            Swal.fire({
                icon: 'warning',
                title: 'Missing Information',
                text: 'Please provide both rating and comment',
                confirmButtonColor: '#3085d6'
            });
            return;
        }

        try {
            const response = await fetch('/review/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    productId: '<%= product._id %>',
                    rating,
                    comment
                })
            });

            const data = await response.json();
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: 'Your review has been added successfully!',
                    confirmButtonColor: '#3085d6'
                }).then(() => {
                    document.getElementById('reviewForm').reset();
                    submitButton.disabled = true;
                    loadReviews();
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: data.message || 'Failed to add review',
                    confirmButtonColor: '#3085d6'
                });
            }
        } catch (error) {
            console.error('Error submitting review:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Failed to submit review. Please try again later.',
                confirmButtonColor: '#3085d6'
            });
        }
    }

    function scrollToSection(sectionId) {
        const element = document.getElementById(sectionId);
        if (element) {
            const offset = 120;
            const elementPosition = element.getBoundingClientRect().top + window.pageYOffset;
            const offsetPosition = elementPosition - offset;

            window.scrollTo({
                top: offsetPosition,
                behavior: 'smooth'
            });

            const buttons = document.querySelectorAll('.nav-button');
            buttons.forEach(button => button.classList.remove('active'));
            event.currentTarget.classList.add('active');
        }
    }

    async function confirmDelete(reviewId) {
        Swal.fire({
            title: 'Are you sure?',
            text: 'Do you want to delete this review?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, delete it!'
        }).then(async (result) => {
            if (result.isConfirmed) {
                try {
                    const response = await fetch(`/review/delete/${reviewId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        }
                    });

                    const data = await response.json();
                    if (data.success) {
                        Swal.fire(
                            'Deleted!',
                            'Your review has been deleted.',
                            'success'
                        ).then(() => {
                            loadReviews();
                        });
                    } else {
                        Swal.fire(
                            'Error!',
                            data.message || 'Failed to delete review',
                            'error'
                        );
                    }
                } catch (error) {
                    Swal.fire(
                        'Error!',
                        'Failed to delete review',
                        'error'
                    );
                }
            }
        });
    }

    function displayProductRating(stats) {
        const ratingValue = document.getElementById('ratingValue');
        const averageRating = stats.averageRating || 0;
        ratingValue.textContent = averageRating.toFixed(1);
    }

    function addToWishlist(productId) {
        <% if (!user) { %>
            showLoginSignupPrompt('wishlist');
            return;
        <% } %>

        $.ajax({
            url: '/wishlist/add',
            method: 'POST',
            data: { productId },
            success: function(response) {
                if (response.success) {
                    const wishlistBtn = document.querySelector('.button-add-to-wishlist');
                    wishlistBtn.classList.add('active');
                    wishlistBtn.innerHTML = '<i class="fas fa-heart"></i> Added to Wishlist';
                    
                    Swal.fire({
                        icon: 'success',
                        title: 'Added to Wishlist',
                        text: response.message,
                        timer: 1500,
                        showConfirmButton: false
                    });

                    updateWishlistCount(response.wishlistCount);
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: response.message,
                        confirmButtonColor: '#dc3545'
                    });
                }
            },
            error: function(xhr) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: xhr.responseJSON?.message || 'Failed to add to wishlist',
                    confirmButtonColor: '#dc3545'
                });
            }
        });
    }

    function showLoginSignupPrompt(type = 'cart') {
        const actionText = type === 'wishlist' ? 'add products to your wishlist' : 'add products to your cart';
        Swal.fire({
            icon: 'info',
            title: 'Login Required',
            text: `You need to login to ${actionText}`,
            confirmButtonColor: '#4f46e5',
            confirmButtonText: 'Login',
            showCancelButton: true,
            cancelButtonText: 'Cancel',
            footer: '<a href="/signup" style="color: #4f46e5; text-decoration: underline;">Don\'t have an account? Sign up</a>'
        }).then((result) => {
            if (result.isConfirmed) {
                const returnUrl = encodeURIComponent(window.location.pathname + window.location.search);
                window.location.href = `/login?returnUrl=${returnUrl}`;
            }
        });
    }

    function updateCartCount(count) {
        const cartCountElements = document.querySelectorAll('.cart-count');
        cartCountElements.forEach(el => {
            el.textContent = count;
            el.style.display = count > 0 ? 'inline-block' : 'none';
        });
    }

    function updateWishlistCount(count) {
        const wishlistCountElements = document.querySelectorAll('.wishlist-count');
        wishlistCountElements.forEach(el => {
            el.textContent = count;
            el.style.display = count > 0 ? 'inline-block' : 'none';
        });
    }
</script>


<%- include("../../views/partials/user/footer") %>  
